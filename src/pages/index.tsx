import Head from 'next/head'
import { Layout } from 'components'
import { RotaAutenticada } from 'components'
import { usePalpiteService } from 'app/services/palpites.service'
import { Palpites } from 'app/models/palpites'
import { useState } from 'react'
import { Button } from '@mui/material'
import { DataTable, DataTablePageParams } from 'primereact/datatable'
import { Column } from 'primereact/column'
import { Page } from 'app/models/common/page'
import { useFormik } from 'formik'

export interface Ranking {
  seq?: number,
  nome?: string
  pontuacao?: number,
  cravadas?: number,
  colocacao?: number,
  onSubmit?: () => void
}

const formScheme: Ranking = {
  seq: undefined,
  nome: '',
  pontuacao: undefined,
  cravadas: undefined,
  colocacao: undefined
}

export const Home: React.FC<Ranking> = ({
  seq,
  nome,
  pontuacao,
  cravadas,
  colocacao,
  onSubmit
}) => {

  const palpiteService = usePalpiteService()
  const [ loading, setLoading ] = useState<boolean>(false)
  const [ palpites, setPalpites ] = useState<Page<Ranking>>({
    content: [],
    first: 0,
    number: 0,
    size: 0,
    totalElements: 0
})


const handleSubmit = (filtro: Ranking) => {
  handlePage(null)
}

const {
  handleSubmit: formikSubmit,
  values: filtro,
  handleChange
} = useFormik<Ranking>({
  onSubmit: handleSubmit,
  initialValues: { seq: 0, nome: '' , pontuacao: 0, cravadas: 0, colocacao: 0 }
})



const handlePage = (event: DataTablePageParams | any) => {
setLoading(true)
palpiteService.ranking(event?.page, event?.rows)
                .then(result => {
                    setPalpites({...result, first: event?.first})
                }).finally(() => setLoading(false))
  
                //console.log(palpites.content)
              }

const actionTemplate = () => {
  const url = `/palpites/ranking`
  return (
      <div>
        {/* {palpites.content}  */}
      </div>
  )
}


const formik = useFormik<Ranking>({
  initialValues: {...formScheme},
  onSubmit(values, formikHelpers) {
    
  },
  enableReinitialize: true
  //validationSchema: validationScheme
})


  return (

    <RotaAutenticada >
      <Head>
        <title>Campeonato Brasileiro</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout titulo="Home">
      <form onSubmit={formikSubmit}>
        <h2>
          Regras Gerais
        </h2>
        <ul>
          <li>O valor será de R$ 100,00 por cota, podendo ser pago em 2 vezes, R$ 50,00 até 14 de abril e R$ 50,00 até 10 de maio;</li>
          <li>O Administrador do bolão não participará, mas será cobrado 25% (R$ 25,00 de cada cota adquirida) de taxa de administração (hospedagem inclusa), lembrando que a hospedagem pode variar (valores em dólar, não é valor fixo, depende do uso dos apostadores, da cotação do dólar e serão 8 meses de campeonato);</li>
          <li>A aposta para um jogo poderá ser feita até 5 minutos antes do início da partida;</li>
          <li>A visualização dos palpites dos outros apostadores só será permitida após o início da partida (em desenvolvimento);</li>
          <li>O apostador poderá comprar mais de uma cota;</li>
        </ul>
        <h3>Pontuação:</h3>
        <ul>
          <li>2,0 para cravar o placar ao final do jogo, quando vitória ou empate;</li>
          <li>1,0 para quando acertar o vencedor ou empate (porém, sem cravar);</li>
          <li>0,0 para quando errar o vencedor ou empate;</li>
          <li>A pontuação de todos os participantes será exibida num ranking (Classificação);</li>
        </ul>
        <h3>Premiação:</h3>
        <ul>
          <li>Total líquido = R$ 75,00 * quantidade de cotas vendidas;</li>
          <li>Premiação: 1º lugar leva 50% do total líquido, 2º lugar leva 20%, 3º lugar leva 15%, 4º lugar leva 10% e 5º lugar leva 5%;</li>
        </ul>
        <h3>Desempate:</h3>
        <ul>
          <li>Empates provavelmente serão raros no ranking desse bolão, pois existem muitas rodadas e muitos jogos nesse campeonato;</li>
          <li>A única regra é pela maior quantidade de placares certos (cravadas);</li>
          <li>Caso permaneça o empate, o valor será dividido entre os participantes empatados, segue o exemplo abaixo:</li>
          <li>1º Zé = receberá 50% do total líquido</li>
          <li>2º Tonho = receberá 5% (20% / 4) do total líquido</li>
          <li>2º Zelão = receberá 5% (20% / 4) do total líquido</li>
          <li>2º Ana = receberá 5% (20% / 4) do total líquido</li>
          <li>2º Jeff = receberá 5% (20% / 4) do total líquido</li>
          <li>3º Cátia = receberá 15% do total líquido</li>
          <li>4º Tico = receberá 10% do total líquido</li>
          <li>5º Camilo = receberá 5% do total líquido</li>
          <li>6º Betinho = receberá 0% do total líquido, assim como os demais abaixo</li>
        </ul>
        <h2>
          Ranking Geral
        </h2>
        <div className='columns'>
        <Button type='submit' className='button is-success'>Visualizar Ranking</Button>
        </div>
        <div className='columns'>
                <div className='is-full'>
                    <DataTable autoLayout
                            resizableColumns
                            columnResizeMode='fit'
                            value={palpites.content}
                            lazy paginator
                            totalRecords={palpites.totalElements}
                            first={palpites.first}
                            rows={palpites.size}
                            onPage={handlePage}
                            loading={loading}
                            emptyMessage="Nenhum registro."
                            >
                        <Column field="colocacao" header="Colocação" />      
                        <Column field="nome" header="Apostador" />
                        <Column field='pontuacao' header="Pontuação" />
                        <Column field='cravadas' header="Cravadas" />
                        <Column body={actionTemplate} />
                    </DataTable>

                </div>

            </div>
      </form>
      </Layout >
    </RotaAutenticada>

  )

}

export default Home